const finalPosition = (width, length, chars) => {
  let y = 0;
  let x = 0; 
  let direction = 'N';
  const splited = chars.split('')
  splited.map((char) => {
    const character = char.toUpperCase();
    if ((character === 'F' || character === 'T') && x < 0) x = 0;
    if ((character === 'F' || character === 'T') && y < 0) y = 0;
    if ((character === 'F' || character === 'T') && x > width) x = width -1;
    if ((character === 'F' || character === 'T') && y > length) y = length -1;
    switch(char){
      case 'D':
        if (direction === 'N') return direction = 'L'
        if (direction === 'L') return direction = 'S'
        if (direction === 'S') return direction = 'O'
        if (direction === 'O') return direction = 'N'
      case 'E':
        if (direction === 'N') return direction = 'O'
        if (direction === 'O') return direction = 'S'
        if (direction === 'S') return direction = 'L'
        if (direction === 'L') return direction = 'N'
      case 'F':
        if (direction === 'N') return y += 1
        if (direction === 'L') return x += 1
        if (direction === 'S') return y -= 1
        if (direction === 'O') return x -= 1
      case 'T':
        if (direction === 'N') return y -= 1
        if (direction === 'L') return x -= 1
        if (direction === 'S') return y += 1
        if (direction === 'O') return x += 1
    }
  })
  console.log(direction, x, y)
}

finalPosition(50, 50, 'tTFFDTTETDEDTTDDFFDEFDTEFTTDDEDEFFTEETEDTTEEDDEFFFTEDFDFTTDDDTTTTTFDEFDFFTEDTEDEFTDTETETFDFTDTFEFDTFTTEEFEEFEDDTFTEDFFTTDTTTFDETETDDTEDDTFEDFDEFDDTTDEFEFTDTTDFFEDDTDFDETTDDFFTEEDFFTTTDETFTFDTETTTTDEFFETFTDFDTEEDFTEFTEFFFTDEEDDTTEFDFETDFEEETTDFTTTEEEEEDTETFETTETDEEFTTDDDFFTFDDEFDEFTTTEDFFFTEEDTDDTTDFDEETTDETETDDETTTDEFEETTETDEDTEFTTDDEEFDFDTEEEDEDTDDTEEEEEDTFEDEDDDTTTFFDETFFDDTFDTEFFFDDFEEFEFDDFDTTETTDTDTTTDEDFTTDDDTTTTTDTEDFEFDTFFETEEEFFFEFDTTDETTFFETTDEETFEDTEFFDEEFEEDTTFFTEEETDTEEEFTFFEFEFDFFEFTFEDEEDFDDDFDFEFEDDDTEETTETFTTFDTDEFTFEEDEFTEFETFEEEFDETEDFFTFDFFTFDTFEFDEDTTTFEDEFTTDDEEFDTFTEEDTETEFEFFEEEFFTFEETEDDFFFTFDETFDEFETDTFDDFFTFDTFTTFTTFDFDDEDEFFFETTTTFFFFTDEEEFTDFDDFTFETDDEDFFFEFFDDDTTDEFETFDEFDEDETDFEETEDTFETTTFEEEFTETFFTDFDFEDFTDDTEFTFFEFEEFTTTFEEFTDDDEEDTFTFDTTDFDEETFFTDFDEDEEFFDTFETEDEETTEFFFDETTTFTEETFDTEFFEEFFDEDFFDTTEFDETDDETDDDTDFETTTETEEEFDFTEETDTEDETTEDETFEEEFTFFEEDTFFFTEDDFDDFDDTTEDEETETEEFDDDTTTTTEEFEFFFTEFEDEFEFEFEDDFFEEEFEETTFDFEEDDTTTTETDTEDEFFDFTTFFTDTEDEDEDDFEFT')

finalPosition(15, 36, 'FFFFFFFFFFFFFFFFDFETTTTTTTTTTTTTTTT')

finalPosition(1000, 1000, 'EDFFEDFTTEDFTETEFDTFDTDTDTFDFTDEDTFFTFTDDDETFTFEFETEFEEEDFTTEFEEDFTFFTFTDTTDFDDDTFTTTDDEETDDFTDFFETTDTTTFEEFFTDTFETDEFEDEFDFDTTEFDEEDTTDDETTDEDTTEEEFFEEDDDETDFDTEDEDFTFFEEDEDDFEDEDFDDFEDEETTFTETFTTTEETTFDDTTEFDDEDTDEDEDDFTFEFTDFEFFDTETFFFTDTFTEFFFEDETFETTFETDFFFDEETETFEFFTFETFEFFTEETDETDEFEFTFDEEFDEEDTEDEFEFTEETTTTFEEFTDTDDFDEDFEDDDDTEDDDTFDDDEEEEDTTDFEDTDETFTFTFDFTFTDFEDEFDEEEDDETEEEDDTEFEFFFDTEFTFFEETETEDDDDEFTEEDDEDDTTDTTEDFEFETFTDTFTFEEDEFEDTEFDEEDEDEFDTEDEETEDEDEDDEDTDTDDFFEFDEETTEDDEFFTFDEFEFFDFDDTFEFTTDDDTDTDDFDEEDETDDDFEFTEDEFEEFDETEFTDFTFDDFTFEEDEEEEEDDDTEDDFTDFDFFFDTETTTDETTEDETEDDETETDEEFTTFTDDFDEEEFFDEDTEDFTEETTEFDDFTFEFEEEETFTEFTEDFTFFEEEDFDETTEFDTFFDDDFFDTEEFETDTETFDFTDEDTFFFFEETTFDFDDFTDTTDFFTFDDDTDTDDFDDEETETTFETTEFDTTFEDDFDTEDETTTEDTDEFFEFFFTDTEDTTTEFFTTTTDFTDFTETDDFDEEFEFTEFTTDDDTEFEFETDDDDTETTTETEEDEETTDDFTDTETTFTFFTEFFEEDEEEFTTDEEEEFEDTEEEDEEDDDTETEFEFDDDEDEFEFTTDFDTTDEDFTFDDTDTFDDDDEFEEEDEDDTTTDDTEDTEDDTDTDDTFETDTDTDFDDDTTEEEFEDTEFFDEEDTTEFTDEDTDDETEFEFEFFTTTEEFDEF')